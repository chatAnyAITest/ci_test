name: docker

on:
  push:
    tags:
      - "v**"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          cache-dependency-path: |
            subdir/go.sum
            tools/go.sum
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            chatanyai/chatanyai
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Login
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
#          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Chatsvc clone
        env:
          CI: false
        run: |
            git clone https://codehash:${{ secrets.MY_GITHUB_TOKEN }}@github.com/ragzone/chatsvc.git
      - name: Run Web
        env:
          CI: false
        working-directory: ./chatsvc
        run: |
          tree . -L 3
          git clone https://codehash:${{ secrets.MY_GITHUB_TOKEN }}@github.com/ChatAnyAI/chatanyai.git
          cd chatanyai
          node -v
          npm install -g pnpm
          pnpm i
          npm run build
          cp -rf build/* ../pkg/router/ui/build/
          ls -rtl ../pkg/router/ui/build/
          tree ../pkg/router/ui -L 3
          cd ..
      - name: Extract version
        id: extract_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./chatsvc
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GOPROXY=proxy.golang.org
            MY_GITHUB_TOKEN=${{ secrets.MY_GITHUB_TOKEN }}
            MY_APP_VERSION=${{ steps.extract_version.outputs.version }}